### ref:
# https://registry.terraform.io/providers/hashicorp/vsphere/latest/docs/resources/virtual_machine#creating-a-virtual-machine-from-a-template
# https://registry.terraform.io/providers/hashicorp/vsphere/latest/docs/resources/virtual_machine#cloning-and-customization-example
# https://github.com/Terraform-VMWare-Modules/terraform-vsphere-vm
###

terraform {
  required_providers {
    vsphere = {
      source = "hashicorp/vsphere"
      version = "2.0.2"
    }
  }
}

# Configure the VMware vSphere Provider
provider "vsphere" {
  user           = "${VSPHERE_USER}"
  password       = "${VSPHERE_USER_PASS}"
  vsphere_server = "${VSPHERE_SERVER}"

  # if you have a self-signed cert
  allow_unverified_ssl = true
}

# Deploy 2 linux VMs
module "k3s" {
  source        = "./modules/terraform-vsphere"
  # version       = "X.X.X"

  dc            = "${VSPHERE_DC}"
  vmrp          = "${VSPHERE_VMRP}"
  vmfolder      = "${VSPHERE_VMFOLDER}"
  datastore     = "${VSPHERE_DATASTORE}"
  vmtemp        = "template_ubuntu2004_nodhcp"

  instances     = 3
  vmname        = "k"

  cpu_number    = 4
  ram_size      = 12288  # [4096, 6144, 8192, 12288, 16384]
  # cpu_hot_add_enabled     = true
  # memory_hot_add_enabled  = true
  # disk_label        = "disk0"
  disk_size_gb      = [40]
  enable_disk_uuid  = true

  network = {
    "${VSPHERE_PORTGROUP}" = ["10.2.113.18", "10.2.113.19", "10.2.113.20"] # To use DHCP create Empty list ["",""]

  }
  ipv4submask = ["16"]
  dns_server_list = ${DNS}
  domain      = "${DOMAIN}"
  vmgateway   = "10.2.0.1"

  enable_logging  = true
  extra_config    = {
    "guestinfo.userdata" = base64encode(templatefile("cloudinit/userdata.yaml", {
      username    = "${NODE_USER}"
      password    = base64encode("${NODE_PASS}"),
      ssh_pubkey  = "${NODE_SSHKEY}"
      ntp         = "10.2.0.1"
    }))
    "guestinfo.userdata.encoding" = "base64"
  }
}
