---
- hosts:
    - ubuntu
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      pause:
        seconds: 5
    - name: Wait for availability
      wait_for_connection:
        delay: 0
        timeout: 300

  tasks:
    - name: Locale
      tags: [networking, setup]
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: Networking
      tags: [networking, setup]
      block:
        - name: Networking (1) | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Networking (1) | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            block: |
              127.0.1.1   {{ inventory_hostname }}
        - name: Networking (2) | Replace netplan configuration
          ansible.builtin.template:
            src: netplan.j2
            # Alphabetically later files, no matter what directory in,
            # will amend keys if the key does not already exist and override previous keys if they do
            dest: /etc/netplan/99-ansible-config.yaml
            owner: root
            group: root
            mode: 0644
          notify: Netplan apply

    - name: Packages | Ubuntu
      tags: [packages, setup]
      block:
        - name: Packages (1) | Install required packages
          ansible.builtin.apt:
            name: "{{ packages | default([]) }}"
            state: present
            update_cache: true

        # - name: Packages (2) | Add eternal terminal key
        #   ansible.builtin.apt_key:
        #     url: https://mistertea.github.io/debian-et/et.gpg
        #     state: present
        #     keyring: /etc/apt/trusted.gpg.d/et.gpg
        # - name: Packages (2) | Add eternal terminal repository
        #   ansible.builtin.apt_repository:
        #     # ubuntu jammy == debian bookworm
        #     repo: >
        #       deb [signed-by=/etc/apt/trusted.gpg.d/et.gpg]
        #       https://mistertea.github.io/debian-et/debian-source/
        #       bookworm main
        # - name: Packages (2) | Install custom packages
        #   ansible.builtin.apt:
        #     name: et
        #     state: present
        #     update_cache: true

        - name: Packages (3) | Remove packages
          ansible.builtin.apt:
            name: "{{ packages_remove | default([]) }}"
            state: absent
        - name: Packages | Remove leaf packages
          ansible.builtin.apt:
            autoclean: true
            autoremove: true
    # - name: Remove cloud-init files
    #   ansible.builtin.file:
    #     state: absent
    #     path: "{{ item }}"
    #   loop:
    #     - "/etc/cloud"
    #     - "/var/lib/cloud"
    #   when:
    #     - "'cloud-init' in apt_remove_packages"
    # - name: Remove snapd files
    #   ansible.builtin.file:
    #     state: absent
    #     path: "{{ item }}"
    #   loop:
    #     - "/home/{{ ansible_user }}/.snap"
    #     - "/snap"
    #     - "/var/snap"
    #     - "/var/lib/snapd"
    #     - "/var/cache/snapd"
    #     - "/usr/lib/snapd"
    #   when:
    #     - "'snapd' in apt_remove_packages"

    - name: User Configuration
      tags: [user, setup]
      block:
        - name: User Configuration | Add additional SSH public keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "{{ item }}"
          # loop: "{{ ssh_authorized_keys | default([]) }}" # from group_var
          loop:
            - "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
            - "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"
        - name: User Configuration | Add user to sudoers
          ansible.builtin.copy:
            content: |
              {{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL
            dest: /etc/sudoers.d/{{ ansible_user }}_nopasswd
            mode: 0440

    - name: Network UPS Tools
      tags: [system, setup]
      when: "'metal' in group_names"
      block:
        - name: Force systemd to reload itself
          systemd:
            daemon_reload: true
        - name: Configure upsmon.conf
          ansible.builtin.template:
            src: nut/upsmon.conf.j2
            dest: "{{ nut.nut_config_path }}/upsmon.conf"
            owner: root
            group: "{{ nut.nut_user }}"
            mode: 0640
          register: upsmon_conf_result
        - name: Configure nut.conf
          ansible.builtin.template:
            dest: "{{ nut.nut_config_path }}/nut.conf"
            src: nut/nut.conf.j2
            owner: root
            group: "{{ nut.nut_user }}"
            mode: 0640
          register: nut_conf_result
        - name: Ensure NUT services running & enabled
          service:
            name: "{{ item }}"
            state: restarted
            enabled: true
          with_items:
            - nut-client
            # - nut-driver
            # - nut-server

      notify: Reboot

  handlers:
    - name: Netplan apply
      shell: netplan apply
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
