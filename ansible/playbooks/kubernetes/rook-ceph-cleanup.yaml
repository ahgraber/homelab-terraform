---
- hosts:
    - controller
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  vars_prompt:
    - name: nuke
      prompt: |-
        /!\  Are you sure you want to nuke rook-ceph cluster?  /!\
        /!\  Have you already removed rook-ceph k8s resources?  /!\
        Type YES NUKE ROOK-CEPH to proceed
      default: "n"
      private: false
  pre_tasks:
    - name: Check for confirmation
      ansible.builtin.fail:
        msg: Aborted nuking the cluster
      when: nuke != 'YES NUKE ROOK-CEPH'

    - name: Proceeding with rook-ceph cleanup ...
      ansible.builtin.pause:
        seconds: 5
    - name: Wait for availability
      wait_for_connection:
        delay: 10
        timeout: 300

  tasks:
    - name: Reset disks
      ignore_errors: true
      block:
        - name: Remove /var/lib/rook
          ansible.builtin.file:
            state: absent
            path: /var/lib/rook
          when: rook_block_devices is defined and rook_block_devices | length > 0

        - name: Zap the drives
          ansible.builtin.shell: |-
            sgdisk --zap-all {{ item.0 }} || true
          loop:
            - "{{ rook_block_devices | default([]) }}"
          when: rook_block_devices is defined and rook_block_devices | length > 0

        - name: Wipe a large portion of the beginning of the disk to remove more LVM metadata that may be present
          ansible.builtin.shell: |-
            dd if=/dev/zero of={{ item.0 }} bs=1M count=100 oflag=direct,dsync
          loop:
            - "{{ rook_block_devices | default([]) }}"
          when: rook_block_devices is defined and rook_block_devices | length > 0

        - name: Clean SSDs with blkdiscard instead of dd
          ansible.builtin.command: |-
            blkdiscard {{ item }}
          with_items:
            - "{{ rook_block_devices | default([]) }}"
          when: rook_block_devices is defined and rook_block_devices | length > 0

        - name: Inform the OS of partition table changes
          ansible.builtin.command: |-
            partprobe {{ item.0 }}
          with_items:
            - "{{ rook_block_devices | default([]) }}"
          when: rook_block_devices is defined and rook_block_devices | length > 0

        # - name: Ceph can leave LVM and device mapper data that can lock the disks
        #   ansible.builtin.command: ls /dev/mapper/ceph-* | xargs -I% -- dmsetup remove %
        #   ignore_errors: true
        #   when: rook_block_devices is defined and rook_block_devices | length > 0
        # - name: Ceph can leave LVM and device mapper data that can lock the disks
        #   ansible.builtin.command: "{{ item }}"
        #   ignore_errors: true
        #   loop:
        #     - rm -rf /dev/ceph-*
        #     - rm -rf /dev/mapper/ceph--*
        #   when: rook_block_devices is defined and rook_block_devices | length > 0
